version: '3.8'

services:
  database:
    image: postgres:13
    container_name: task-manager-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_manager_db
    ports:
      - "5432:5432"
    volumes:
      - ./docker/data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d task_manager_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-manager-backend
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      # Verificação que o backend está respondendo antes de liberar o frontend
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-manager-frontend
    ports:
      - "4200:4200"
    environment:
      # CRÍTICO: Se o Angular fizer requisições de dentro do container para a rede interna Docker,
      # ele deve usar "http://backend:8080". O problema é se o Angular está tentando usar
      # esta variável de ambiente como se estivesse no navegador (host).
      API_URL: http://localhost:8080
    depends_on:
      backend:
        condition: service_started
