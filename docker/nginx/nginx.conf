server {
listen 80;

# Habilita compressão Gzip
gzip on;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

# Log das requisições
access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;

# Roteamento para o Backend (Spring Boot)
location /api/ {
    # CRÍTICO: 'backend' é o nome do serviço no docker-compose.yml
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # Garante que as requisições cheguem corretamente ao Spring Boot
}

# Roteamento para o Frontend (Angular)
location / {
    # CRÍTICO: 'frontend' é o nome do serviço no docker-compose.yml
    proxy_pass http://frontend:4200;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # CRÍTICO: Configuração para Angular SPA.
    # Se o arquivo não for encontrado (ex: /tasks), ele retorna o index.html
    try_files $uri $uri/ /index.html;
}

}